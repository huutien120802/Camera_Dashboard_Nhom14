{"ast":null,"code":"import { toast } from 'react-toastify';\nimport { put, takeLeading } from 'redux-saga/effects';\nimport authAPI from 'apis/auth/authAPI';\nimport { removeSpacesWithTrim } from 'utils';\nimport axiosClient from 'utils/axios';\nimport { LOGIN } from './actionTypes';\nimport { actionLoginSuccess, actionLoginFailed } from './actions';\nfunction login(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    try {\n      const {\n        values: {\n          email,\n          password\n        },\n        callback\n      } = payload;\n      const newData = removeSpacesWithTrim({\n        email,\n        password\n      });\n      const response = yield authAPI.login(newData);\n      localStorage.setItem('token', response);\n      yield put(actionLoginSuccess());\n      toast.success('You have been logged in successfully.');\n      axiosClient.defaults.headers.Authorization = `Bearer ${response}`;\n      callback();\n    } catch (error) {\n      toast.error(error.response.data);\n      yield put(actionLoginFailed());\n    }\n  }();\n}\nexport default function* loginSaga() {\n  yield takeLeading(LOGIN, login);\n}","map":{"version":3,"names":["toast","put","takeLeading","authAPI","removeSpacesWithTrim","axiosClient","LOGIN","actionLoginSuccess","actionLoginFailed","login","_ref","payload","values","email","password","callback","newData","response","localStorage","setItem","success","defaults","headers","Authorization","error","data","loginSaga"],"sources":["D:/HKII-2023/Camera_Dashboard_Nhom14/src/store/auth/login/saga.js"],"sourcesContent":["import { toast } from 'react-toastify';\r\nimport { put, takeLeading } from 'redux-saga/effects';\r\n\r\nimport authAPI from 'apis/auth/authAPI';\r\nimport { removeSpacesWithTrim } from 'utils';\r\nimport axiosClient from 'utils/axios';\r\n\r\nimport { LOGIN } from './actionTypes';\r\nimport {\r\n  actionLoginSuccess,\r\n  actionLoginFailed,\r\n} from './actions';\r\n\r\nfunction* login({ payload }) {\r\n  try {\r\n    const {\r\n      values: {\r\n        email,\r\n        password,\r\n      },\r\n\r\n      callback,\r\n    } = payload;\r\n\r\n    const newData = removeSpacesWithTrim({\r\n      email,\r\n      password,\r\n    });\r\n\r\n    const response = yield authAPI.login(newData);\r\n\r\n    localStorage.setItem('token', response);\r\n\r\n    yield put(actionLoginSuccess());\r\n\r\n    toast.success('You have been logged in successfully.');\r\n\r\n    axiosClient.defaults.headers.Authorization = `Bearer ${response}`;\r\n\r\n    callback();\r\n  } catch (error) {\r\n    toast.error(error.response.data);\r\n\r\n    yield put(actionLoginFailed());\r\n  }\r\n}\r\n\r\nexport default function* loginSaga() {\r\n  yield takeLeading(LOGIN, login);\r\n}\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,GAAG,EAAEC,WAAW,QAAQ,oBAAoB;AAErD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,oBAAoB,QAAQ,OAAO;AAC5C,OAAOC,WAAW,MAAM,aAAa;AAErC,SAASC,KAAK,QAAQ,eAAe;AACrC,SACEC,kBAAkB,EAClBC,iBAAiB,QACZ,WAAW;AAElB,SAAUC,KAAKA,CAAAC,IAAA;EAAA,IAAC;IAAEC;EAAQ,CAAC,GAAAD,IAAA;EAAA,oBAAE;IAC3B,IAAI;MACF,MAAM;QACJE,MAAM,EAAE;UACNC,KAAK;UACLC;QACF,CAAC;QAEDC;MACF,CAAC,GAAGJ,OAAO;MAEX,MAAMK,OAAO,GAAGZ,oBAAoB,CAAC;QACnCS,KAAK;QACLC;MACF,CAAC,CAAC;MAEF,MAAMG,QAAQ,GAAG,MAAMd,OAAO,CAACM,KAAK,CAACO,OAAO,CAAC;MAE7CE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;MAEvC,MAAMhB,GAAG,CAACM,kBAAkB,CAAC,CAAC,CAAC;MAE/BP,KAAK,CAACoB,OAAO,CAAC,uCAAuC,CAAC;MAEtDf,WAAW,CAACgB,QAAQ,CAACC,OAAO,CAACC,aAAa,GAAI,UAASN,QAAS,EAAC;MAEjEF,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdxB,KAAK,CAACwB,KAAK,CAACA,KAAK,CAACP,QAAQ,CAACQ,IAAI,CAAC;MAEhC,MAAMxB,GAAG,CAACO,iBAAiB,CAAC,CAAC,CAAC;IAChC;EACF,CAAC;AAAA;AAED,eAAe,UAAUkB,SAASA,CAAA,EAAG;EACnC,MAAMxB,WAAW,CAACI,KAAK,EAAEG,KAAK,CAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}